@model DB_Project.DataBase.Models.User

<div id="ModalDiv" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Edit User</h4>
            </div>
            <div class="modal-body">
                @using (Ajax.BeginForm("Edit", "Users", null, new AjaxOptions
                {
                    AllowCache = false,
                    HttpMethod = "POST",
                    InsertionMode = InsertionMode.ReplaceWith,
                    OnBegin = "SendingDataStarted",
                    OnSuccess = "DataSaved",
                    OnFailure = "DataSaveFailed",
                    OnComplete = "DataSent",
                    UpdateTargetId = "mainTableDiv",
                }))
                {
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.ID)
                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-2" for="Email">UserName</label>
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("", "Select Group", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("RoleId", (ViewBag.UserRoles as SelectList), new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Save" class="btn btn-primary" />
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" value="Cancel">Cancel</button>
            </div>
        </div>
    </div>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script>
        $("button[value='Cancel']").on("click", function () {
            $("#ModalDiv").modal("hide").html("");
        });
        $("#btnSubmit").on("click", function (e) {
            var emailError = $("#emailError").prop("hidden");
            if ($("#RoleId").val() == "0" || !emailError) {
                e.preventDefault();
                if ($("#RoleId").val() == "0") {
                    $("#roleError").removeAttr("hidden");
                }
            }
        });
        $("#RoleId").on("change", function () {
            $("#roleError").attr("hidden", "hidden");
        });
        $("#Email").on("keyup blur change", function (e) {
            var Emails = @Html.Raw(ViewBag.Emails);
            var Email = $("#Email").val();
            if (Emails.indexOf(Email) != -1) {
                $("#emailError").removeAttr("hidden");
            }
            else {
                $("#emailError").attr("hidden", "hidden");
            }
        });
    </script>
</div>